{"name": "test_add_group[None:nameldyby':headerI2:footerP T Dp06]", "status": "failed", "statusDetails": {"message": "AssertionError: assert [383:New grou...ootersV , ...] == [383:New grou...ootersV , ...]\n  Left contains one more item: None:nameldyby':headerI2:footerP T Dp06\n  Use -v to get the full diff", "trace": "app = <fixture.application.Application object at 0x00000229EFDBB4F0>\ndb = <fixture.db.DbFixture object at 0x00000229EFDBB400>, json_groups = None:nameldyby':headerI2:footerP T Dp06\ncheck_ui = False\n\n    def test_add_group(app, db, json_groups, check_ui):\n        group = json_groups\n        with allure.step('Given a grop list'):\n            old_groups = db.get_group_list()\n        with allure.step('WhenI add a group %s to the list' %group):\n            app.group.create(group)\n        with allure.step('Then the new group list is equal to the old list with the added group'):\n            new_groups = db.get_group_list()\n            old_groups.append(group)\n>           assert sorted(old_groups, key=Group.id_or_max) == sorted(new_groups, key=Group.id_or_max)\nE           AssertionError: assert [383:New grou...ootersV , ...] == [383:New grou...ootersV , ...]\nE             Left contains one more item: None:nameldyby':headerI2:footerP T Dp06\nE             Use -v to get the full diff\n\ntest\\test_add_group.py:14: AssertionError"}, "steps": [{"name": "Given a grop list", "status": "passed", "start": 1614186863715, "stop": 1614186863720}, {"name": "WhenI add a group None:nameldyby':headerI2:footerP T Dp06 to the list", "status": "passed", "start": 1614186863720, "stop": 1614186866015}, {"name": "Then the new group list is equal to the old list with the added group", "status": "failed", "statusDetails": {"message": "AssertionError: assert [383:New grou...ootersV , ...] == [383:New grou...ootersV , ...]\n  Left contains one more item: None:nameldyby':headerI2:footerP T Dp06\n  Use -v to get the full diff\n", "trace": "  File \"C:\\Devel\\GitHub\\pythoncourse2020\\test\\test_add_group.py\", line 14, in test_add_group\n    assert sorted(old_groups, key=Group.id_or_max) == sorted(new_groups, key=Group.id_or_max)\n"}, "start": 1614186866015, "stop": 1614186866120}], "parameters": [{"name": "json_groups", "value": "None:nameldyby':headerI2:footerP T Dp06"}], "start": 1614186863715, "stop": 1614186866123, "uuid": "f5e543f3-a69f-4868-a7fc-8116a7f6ed39", "historyId": "f02ba78210a1188157f54d5d3d6dab58", "testCaseId": "8e9b1d07ef6cdb67de3c4a3d82e10652", "fullName": "test.test_add_group#test_add_group", "labels": [{"name": "parentSuite", "value": "test"}, {"name": "suite", "value": "test_add_group"}, {"name": "host", "value": "DESKTOP-7COPOKH"}, {"name": "thread", "value": "1260-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test.test_add_group"}]}